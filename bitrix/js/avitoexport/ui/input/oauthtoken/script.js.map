{"version":3,"file":"script.js","sources":["../../../plugin/skeleton.js","../../../plugin/utils.js","src/index.js"],"sourcesContent":["import {compileTemplate} from \"./utils\";\r\n\r\n// noinspection JSUnresolvedVariable\r\nconst $ = window.AvitoJQuery ?? window.$;\r\n\r\nexport class Skeleton {\r\n\r\n\tstatic defaults = {\r\n\t\tlang: {},\r\n\t\tlangPrefix: null\r\n\t};\r\n\r\n\tconstructor(element: HTMLElement, options: Object = {}) {\r\n\t\tthis.$el = $(element);\r\n\t\tthis.el = this.$el[0];\r\n\t\tthis.options = Object.assign({}, this.constructor.defaults, this.$el.data(), options);\r\n\t}\r\n\r\n\tdestroy() {\r\n\t\tthis.el = null;\r\n\t}\r\n\t\r\n\tgetElement(key, context, method) : JQuery {\r\n\t\tconst selector = this.getElementSelector(key);\r\n\t\r\n\t\treturn this.getNode(selector, context, method || 'find');\r\n\t}\r\n\t\r\n\tgetElementSelector(key: string) : string {\r\n\t\tconst optionKey = key + 'Element';\r\n\t\r\n\t\treturn this.options[optionKey];\r\n\t}\r\n\t\r\n\tgetTemplate(key: string) : string {\r\n\t\tconst optionKey = key + 'Template';\r\n\t\tconst option = this.options[optionKey];\r\n\t\tconst optionFirstSymbol = option.substring(0, 1);\r\n\t\tlet result;\r\n\t\r\n\t\tif (optionFirstSymbol === '.' || optionFirstSymbol === '#') {\r\n\t\t\tresult = this.getNode(option).html();\r\n\t\t} else {\r\n\t\t\tresult = option;\r\n\t\t}\r\n\t\r\n\t\treturn result;\r\n\t}\r\n\t\r\n\tgetNode(selector, context, method = 'find') : JQuery {\r\n\t\tif (selector.substring(0, 1) === '#') { // is id query\r\n\t\t\tcontext = $(document);\r\n\t\t} else if (!context) {\r\n\t\t\tcontext = this.$el;\r\n\t\t}\r\n\t\r\n\t\treturn context[method](selector);\r\n\t}\r\n\t\r\n\tgetLang(key, replaces) : string {\r\n\t\tlet langKey;\r\n\t\tlet result;\r\n\t\r\n\t\tif (this.options.lang != null && key in this.options.lang) {\r\n\t\t\tresult = this.options.lang[key];\r\n\t\t} else {\r\n\t\t\tlangKey = this.options.langPrefix + key;\r\n\t\t\tresult = BX.message(langKey) || '';\r\n\t\t}\r\n\t\r\n\t\tif (result && replaces) {\r\n\t\t\tresult = compileTemplate(result, replaces);\r\n\t\t}\r\n\t\r\n\t\treturn result;\r\n\t}\r\n}\r\n","// @flow\r\n\r\nexport function compileTemplate(template: string, replaces: Object) {\r\n\tlet result = template;\r\n\r\n\tfor (const key in replaces) {\r\n\t\tif (!replaces.hasOwnProperty(key)) { continue; }\r\n\r\n\t\tconst replaceKey = '#' + key + '#';\r\n\t\tconst replaceValue = replaces[key];\r\n\r\n\t\tdo {\r\n\t\t\tresult = result.replace(replaceKey, replaceValue);\r\n\t\t} while (result.indexOf(replaceKey) !== -1);\r\n\t}\r\n\r\n\treturn result;\r\n}\r\n\r\nexport function htmlToElement(html, tag = 'div') {\r\n\tconst renderer = document.createElement(tag);\r\n\r\n\trenderer.innerHTML = html;\r\n\r\n\treturn renderer.firstElementChild;\r\n}","// @flow\r\n\r\nimport {Skeleton} from \"../../../../plugin/skeleton\";\r\n\r\n// noinspection JSUnresolvedVariable\r\nconst $ = window.AvitoJQuery ?? window.$;\r\n\r\n// noinspection JSUnusedGlobalSymbols\r\nexport class OAuthToken extends Skeleton {\r\n\r\n\tstatic defaults = {\r\n\t\tstartElement: '.js-oauth-token__start',\r\n\t\tselectElement: 'select',\r\n\r\n\t\texchangeUrl: '/bitrix/tools/avito.export/oauth/exchange.php',\r\n\t\trefreshUrl: '/bitrix/tools/avito.export/oauth/refresh.php',\r\n\r\n\t\tclientIdElement: 'input[name=\"COMMON_SETTINGS[CLIENT_ID]\"]',\r\n\t\tclientPasswordElement: 'input[name=\"COMMON_SETTINGS[CLIENT_PASSWORD]\"]',\r\n\r\n\t\tlang: {},\r\n\t\tlangPrefix: 'AVITO_EXPORT_ADMIN_USER_FIELD_OAUTH_TOKEN_TYPE_',\r\n\t}\r\n\r\n\tconstructor(element: HTMLElement, options: Object = {}) {\r\n\t\tsuper(element, options);\r\n\t\tthis.bind();\r\n\t}\r\n\r\n\tdestroy() : void {\r\n\t\tthis.unbind();\r\n\t\tsuper.destroy();\r\n\t}\r\n\r\n\tbind() : void {\r\n\t\tthis.handleClientIdChange(true);\r\n\t\tthis.handleClick(true);\r\n\t}\r\n\r\n\tunbind() : void {\r\n\t\tthis.handleClientIdChange(false);\r\n\t\tthis.handleClick(false);\r\n\t}\r\n\r\n\thandleClick(dir: boolean) : void {\r\n\t\tconst button = this.getElement('start');\r\n\r\n\t\tbutton[dir ? 'on' : 'off']('click', this.onClick);\r\n\t}\r\n\r\n\thandleClientIdChange(dir: boolean) : void {\r\n\t\tconst input = this.formInput('clientId');\r\n\r\n\t\tinput[dir ? 'on' : 'off']('change', this.onClientIdChange);\r\n\t}\r\n\r\n\tonClick = () : void => {\r\n\t\tthis.exchange();\r\n\t}\r\n\r\n\tonClientIdChange = () : void => {\r\n\t\tthis.refresh();\r\n\t}\r\n\r\n\texchange() : void {\r\n\t\t$.ajax({\r\n\t\t\turl: this.options.exchangeUrl,\r\n\t\t\ttype: 'POST',\r\n\t\t\tdata: {\r\n\t\t\t\tclientId: this.clientId(),\r\n\t\t\t\tclientSecret: this.clientPassword(),\r\n\t\t\t},\r\n\t\t\tdataType: 'json',\r\n\t\t})\r\n\t\t\t.then(this.exchangeEnd, this.exchangeStop);\r\n\t}\r\n\r\n\texchangeStop = (xhr, textStatus: string, errorThrown: string) : void => {\r\n\t\tthis.showError(this.getLang('EXCHANGE_HTTP_ERROR', {\r\n\t\t\t'REASON':  xhr.status !== 200\r\n\t\t\t\t? `HTTP ${xhr.status}`\r\n\t\t\t\t: (errorThrown || textStatus)\r\n\t\t}));\r\n\t}\r\n\r\n\texchangeEnd = (response: Object) => {\r\n\t\tconst isSuccess = response?.success;\r\n\r\n\t\tif (isSuccess === true) {\r\n\t\t\tthis.updateTokens([\r\n\t\t\t\t{ ID: response.id, VALUE: response.name },\r\n\t\t\t]);\r\n\t\t} else if (isSuccess === false) {\r\n\t\t\tthis.showError(this.getLang('EXCHANGE_FAIL', {\r\n\t\t\t\t'REASON': response.message,\r\n\t\t\t}));\r\n\t\t} else {\r\n\t\t\tthis.showError(this.getLang('EXCHANGE_UNKNOWN_FAIL'));\r\n\t\t}\r\n\t}\r\n\r\n\trefresh() : void {\r\n\t\tconst clientId = this.clientId();\r\n\r\n\t\tif (clientId == null || clientId === '') {\r\n\t\t\tthis.updateTokens([]);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t$.ajax({\r\n\t\t\turl: this.options.refreshUrl,\r\n\t\t\ttype: 'POST',\r\n\t\t\tdata: {\r\n\t\t\t\tclientId: this.clientId(),\r\n\t\t\t},\r\n\t\t\tdataType: 'json',\r\n\t\t})\r\n\t\t\t.then(this.refreshEnd, this.refreshStop);\r\n\t}\r\n\r\n\trefreshStop = (xhr, textStatus: string, errorThrown: string) : void => {\r\n\t\tthis.showError(this.getLang('REFRESH_HTTP_ERROR', {\r\n\t\t\t'REASON':  xhr.status !== 200\r\n\t\t\t\t? `HTTP ${xhr.status}`\r\n\t\t\t\t: (errorThrown || textStatus)\r\n\t\t}));\r\n\t}\r\n\r\n\trefreshEnd = (response: Object) : void => {\r\n\t\tconst isSuccess = response?.success;\r\n\r\n\t\tif (isSuccess === true) {\r\n\t\t\tthis.updateTokens(response.variants);\r\n\t\t} else if (isSuccess === false) {\r\n\t\t\tthis.showError(this.getLang('REFRESH_FAIL', {\r\n\t\t\t\t'REASON': response.message,\r\n\t\t\t}));\r\n\t\t} else {\r\n\t\t\tthis.showError(this.getLang('REFRESH_UNKNOWN_FAIL'));\r\n\t\t}\r\n\t}\r\n\r\n\tupdateTokens(variants: Array) : void {\r\n\t\tconst select = this.getElement('select');\r\n\r\n\t\tthis.clearSelect(select);\r\n\t\tthis.drawSelect(select, variants);\r\n\t}\r\n\r\n\tclearSelect(select: $) : void {\r\n\t\tselect.find('option')\r\n\t\t\t.filter((index, option) => option.value !== '')\r\n\t\t\t.remove();\r\n\t}\r\n\r\n\tdrawSelect(select: $, variants: Array) : void {\r\n\t\tlet lastOption;\r\n\r\n\t\tfor (const variant of variants) {\r\n\t\t\tconst option = $('<option />');\r\n\r\n\t\t\toption.prop('value', variant['ID']);\r\n\t\t\toption.text(variant['VALUE']);\r\n\r\n\t\t\tselect.append(option);\r\n\t\t\tlastOption = option;\r\n\t\t}\r\n\r\n\t\tlastOption?.prop('selected', true);\r\n\t}\r\n\r\n\tshowError(message: string) : void {\r\n\t\talert(message);\r\n\t}\r\n\r\n\tclientId() : string {\r\n\t\treturn this.formInput('clientId').val();\r\n\t}\r\n\r\n\tclientPassword() : string {\r\n\t\treturn this.formInput('clientPassword').val();\r\n\t}\r\n\r\n\tformInput(type: string) : $ {\r\n\t\tconst form = this.$el.closest('form');\r\n\r\n\t\treturn this.getElement(type, form);\r\n\t}\r\n}\r\n"],"names":["$","window","AvitoJQuery","Skeleton","constructor","element","options","$el","el","this","Object","assign","defaults","data","destroy","getElement","key","context","method","selector","getElementSelector","getNode","optionKey","getTemplate","option","optionFirstSymbol","substring","result","html","document","getLang","replaces","langKey","lang","langPrefix","BX","message","template","hasOwnProperty","replaceKey","replaceValue","replace","indexOf","compileTemplate","OAuthToken","onClick","exchange","onClientIdChange","refresh","exchangeStop","xhr","textStatus","errorThrown","showError","status","exchangeEnd","response","isSuccess","success","updateTokens","ID","id","VALUE","name","refreshStop","refreshEnd","variants","bind","unbind","handleClientIdChange","handleClick","dir","formInput","ajax","url","exchangeUrl","type","clientId","clientSecret","clientPassword","dataType","then","refreshUrl","select","clearSelect","drawSelect","find","filter","index","value","remove","lastOption","variant","prop","text","append","alert","val","form","closest","startElement","selectElement","clientIdElement","clientPasswordElement"],"mappings":"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"}