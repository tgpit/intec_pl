{"version":3,"file":"script.js","sources":["../../plugin/skeleton.js","../../plugin/utils.js","src/index.js"],"sourcesContent":["import {compileTemplate} from \"./utils\";\r\n\r\n// noinspection JSUnresolvedVariable\r\nconst $ = window.AvitoJQuery ?? window.$;\r\n\r\nexport class Skeleton {\r\n\r\n\tstatic defaults = {\r\n\t\tlang: {},\r\n\t\tlangPrefix: null\r\n\t};\r\n\r\n\tconstructor(element: HTMLElement, options: Object = {}) {\r\n\t\tthis.$el = $(element);\r\n\t\tthis.el = this.$el[0];\r\n\t\tthis.options = Object.assign({}, this.constructor.defaults, this.$el.data(), options);\r\n\t}\r\n\r\n\tdestroy() {\r\n\t\tthis.el = null;\r\n\t}\r\n\t\r\n\tgetElement(key, context, method) : JQuery {\r\n\t\tconst selector = this.getElementSelector(key);\r\n\t\r\n\t\treturn this.getNode(selector, context, method || 'find');\r\n\t}\r\n\t\r\n\tgetElementSelector(key: string) : string {\r\n\t\tconst optionKey = key + 'Element';\r\n\t\r\n\t\treturn this.options[optionKey];\r\n\t}\r\n\t\r\n\tgetTemplate(key: string) : string {\r\n\t\tconst optionKey = key + 'Template';\r\n\t\tconst option = this.options[optionKey];\r\n\t\tconst optionFirstSymbol = option.substring(0, 1);\r\n\t\tlet result;\r\n\t\r\n\t\tif (optionFirstSymbol === '.' || optionFirstSymbol === '#') {\r\n\t\t\tresult = this.getNode(option).html();\r\n\t\t} else {\r\n\t\t\tresult = option;\r\n\t\t}\r\n\t\r\n\t\treturn result;\r\n\t}\r\n\t\r\n\tgetNode(selector, context, method = 'find') : JQuery {\r\n\t\tif (selector.substring(0, 1) === '#') { // is id query\r\n\t\t\tcontext = $(document);\r\n\t\t} else if (!context) {\r\n\t\t\tcontext = this.$el;\r\n\t\t}\r\n\t\r\n\t\treturn context[method](selector);\r\n\t}\r\n\t\r\n\tgetLang(key, replaces) : string {\r\n\t\tlet langKey;\r\n\t\tlet result;\r\n\t\r\n\t\tif (this.options.lang != null && key in this.options.lang) {\r\n\t\t\tresult = this.options.lang[key];\r\n\t\t} else {\r\n\t\t\tlangKey = this.options.langPrefix + key;\r\n\t\t\tresult = BX.message(langKey) || '';\r\n\t\t}\r\n\t\r\n\t\tif (result && replaces) {\r\n\t\t\tresult = compileTemplate(result, replaces);\r\n\t\t}\r\n\t\r\n\t\treturn result;\r\n\t}\r\n}\r\n","// @flow\r\n\r\nexport function compileTemplate(template: string, replaces: Object) {\r\n\tlet result = template;\r\n\r\n\tfor (const key in replaces) {\r\n\t\tif (!replaces.hasOwnProperty(key)) { continue; }\r\n\r\n\t\tconst replaceKey = '#' + key + '#';\r\n\t\tconst replaceValue = replaces[key];\r\n\r\n\t\tdo {\r\n\t\t\tresult = result.replace(replaceKey, replaceValue);\r\n\t\t} while (result.indexOf(replaceKey) !== -1);\r\n\t}\r\n\r\n\treturn result;\r\n}\r\n\r\nexport function htmlToElement(html, tag = 'div') {\r\n\tconst renderer = document.createElement(tag);\r\n\r\n\trenderer.innerHTML = html;\r\n\r\n\treturn renderer.firstElementChild;\r\n}","import {Skeleton} from \"../../../plugin/skeleton\";\r\n\r\n// noinspection JSUnresolvedVariable\r\nconst $ = window.AvitoJQuery ?? window.$;\r\n\r\n// noinspection JSUnusedGlobalSymbols\r\nexport class BuyerProfile extends Skeleton {\r\n\r\n\tstatic defaults = {\r\n\t\teditUrl: null,\r\n\t\trefreshUrl: null,\r\n\t\trefreshTimeout: 2000,\r\n\r\n\t\tpersonTypeId: null,\r\n\t\tpersonTypeElement: 'select[name=\"PERSON_TYPE\"]',\r\n\r\n\t\tuserId: null,\r\n\r\n\t\tinputElement: 'select',\r\n\t\toptionElement: 'option',\r\n\r\n\t\tlang: {},\r\n\t\tlangPrefix: 'AVITO_EXPORT_ADMIN_BUYER_PROFILE_'\r\n\t}\r\n\r\n\tconstructor(element: HTMLElement, options: Object = {}) {\r\n\t\tsuper(element, options);\r\n\t\tthis.bind();\r\n\t}\r\n\r\n\tbind() : void {\r\n\t\tthis.handleClick(true);\r\n\t\tthis.handlePersonTypeChange(true);\r\n\t}\r\n\r\n\tunbind() : void {\r\n\t\tthis.handleClick(false);\r\n\t\tthis.handlePersonTypeChange(false);\r\n\t}\r\n\r\n\thandleClick(dir: boolean) : void {\r\n\t\tthis.$el[dir ? 'on' : 'off']('click', this.onClick);\r\n\t}\r\n\r\n\thandlePersonTypeChange(dir: boolean) : void {\r\n\t\tconst input = this.getFormInput('personType');\r\n\r\n\t\tinput[dir ? 'on' : 'off']('change', this.onPersonTypeChange);\r\n\t}\r\n\r\n\tonClick = () : void => {\r\n\t\tthis.openEditWindow();\r\n\t\tthis.refreshDelay();\r\n\t}\r\n\r\n\tonPersonTypeChange = () : void => {\r\n\t\tthis.refreshDelay(100);\r\n\t}\r\n\r\n\topenEditWindow() : Window {\r\n\t\tconst editUrl = this.getEditUrl();\r\n\r\n\t\treturn this.openWindow(editUrl);\r\n\t}\r\n\r\n\tgetEditUrl() : string {\r\n\t\tconst query = this.getEditQuery();\r\n\t\tlet url = this.options.editUrl;\r\n\r\n\t\tif (query !== '') {\r\n\t\t\turl +=\r\n\t\t\t\t(url.indexOf('?') === -1 ? '?' : '&')\r\n\t\t\t\t+ query;\r\n\t\t}\r\n\r\n\t\treturn url;\r\n\t}\r\n\r\n\tgetEditQuery() : string {\r\n\t\tconst inputValue = this.getInput().val();\r\n\t\tconst query = [];\r\n\r\n\t\tquery.push('personTypeId=' + encodeURIComponent(this.getPersonTypeId()));\r\n\t\tquery.push('userId=' + encodeURIComponent(this.getUserId()));\r\n\r\n\t\tif (!this.isEmptyValue(inputValue)) {\r\n\t\t\tquery.push('id=' + encodeURIComponent(inputValue));\r\n\t\t}\r\n\r\n\t\treturn query.join('&');\r\n\t}\r\n\r\n\trefreshDelay(timeout: number = this.options.refreshTimeout) : void {\r\n\t\tthis._refreshDelay = setTimeout(this.refresh, timeout);\r\n\t}\r\n\r\n\trefresh = () : void => {\r\n\t\tconst personTypeId = this.getPersonTypeId();\r\n\t\tconst userId = this.getUserId();\r\n\r\n\t\tif (this.isEmptyValue(personTypeId)) {\r\n\t\t\tthis.refreshInput([]);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tclearTimeout(this._refreshDelay);\r\n\r\n\t\t$.ajax({\r\n\t\t\turl: this.options.refreshUrl,\r\n\t\t\ttype: 'POST',\r\n\t\t\tdata: {\r\n\t\t\t\tpersonTypeId: personTypeId,\r\n\t\t\t\tuserId: userId,\r\n\t\t\t},\r\n\t\t\tdataType: 'json',\r\n\t\t})\r\n\t\t\t.then(this.refreshEnd);\r\n\t}\r\n\r\n\trefreshEnd = (response: Object) : void => {\r\n\t\tif (!response || response.status !== 'ok') {\r\n\t\t\talert(this.getLang('REFRESH_FAIL', {\r\n\t\t\t\t'MESSAGE': response.message ?? '',\r\n\t\t\t}));\r\n\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.refreshInput(response.enum);\r\n\t}\r\n\r\n\trefreshInput(values: Array) : void {\r\n\t\tconst input = this.getInput();\r\n\t\tconst options = this.getElement('option', input);\r\n\t\tconst existValueIds = [];\r\n\t\tlet firstFound = null;\r\n\r\n\t\t// create new\r\n\r\n\t\tfor (const value of values) {\r\n\t\t\tlet option = this.searchOption(options, value.ID);\r\n\r\n\t\t\tif (option == null) {\r\n\t\t\t\toption = this.createOption(input, value);\r\n\t\t\t} else if (option.textContent !== value.VALUE) {\r\n\t\t\t\toption.textContent = value.VALUE;\r\n\t\t\t}\r\n\r\n\t\t\tif (firstFound == null) {\r\n\t\t\t\tfirstFound = option;\r\n\t\t\t}\r\n\r\n\t\t\texistValueIds.push(value.ID);\r\n\t\t}\r\n\r\n\t\t// delete non-exists\r\n\r\n\t\tfor (let optionIndex = 0; optionIndex < options.length; optionIndex++) {\r\n\t\t\tconst option = options[optionIndex];\r\n\r\n\t\t\tif (existValueIds.indexOf(option.value) === -1 && !this.isEmptyValue(option.value)) {\r\n\t\t\t\toption.parentElement.removeChild(option);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// auto select first\r\n\r\n\t\tif (firstFound !== null && this.isEmptyValue(input.val())) {\r\n\t\t\tthis.selectOption(firstFound);\r\n\t\t}\r\n\t}\r\n\r\n\tsearchOption(options: $, tokenId: number) : HTMLOptionElement {\r\n\t\tlet result;\r\n\r\n\t\tfor (let i = 0; i < options.length; i++) {\r\n\t\t\tconst option = options[i];\r\n\r\n\t\t\tif (String(option.value) === String(tokenId)) {\r\n\t\t\t\tresult = option;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tcreateOption(input: $, profile: Object) : HTMLOptionElement {\r\n\t\tconst option = document.createElement('option');\r\n\r\n\t\toption.value = profile.ID;\r\n\t\toption.textContent = profile.VALUE;\r\n\r\n\t\tinput.append(option);\r\n\r\n\t\treturn option;\r\n\t}\r\n\r\n\tselectOption(option: HTMLOptionElement) : void {\r\n\t\toption.selected = true;\r\n\t}\r\n\r\n\tgetInput() : $ {\r\n\t\tconst parent = this.$el.parent();\r\n\r\n\t\treturn this.getElement('input', parent);\r\n\t}\r\n\r\n\tisEmptyValue(value) : boolean {\r\n\t\treturn value === null || value === '';\r\n\t}\r\n\r\n\tgetForm() : $ {\r\n\t\treturn $(this.el.form);\r\n\t}\r\n\r\n\tgetFormInput(name: string) : $ {\r\n\t\tconst form = this.getForm();\r\n\r\n\t\treturn this.getElement(name, form);\r\n\t}\r\n\r\n\tgetPersonTypeId() : ?string {\r\n\t\tconst input = this.getFormInput('personType');\r\n\t\tlet result;\r\n\r\n\t\tif (input.length > 0) {\r\n\t\t\tresult = input.val();\r\n\t\t} else {\r\n\t\t\tresult = this.options.personTypeId;\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n\r\n\tgetUserId() : string {\r\n\t\treturn this.options.userId;\r\n\t}\r\n\r\n\topenWindow(url: string) : Window {\r\n\t\tconst result = window.open(url, '_blank');\r\n\r\n\t\tresult.focus();\r\n\r\n\t\treturn result;\r\n\t}\r\n}"],"names":["$","window","AvitoJQuery","Skeleton","constructor","element","options","$el","el","this","Object","assign","defaults","data","destroy","getElement","key","context","method","selector","getElementSelector","getNode","optionKey","getTemplate","option","optionFirstSymbol","substring","result","html","document","getLang","replaces","langKey","lang","langPrefix","BX","message","template","hasOwnProperty","replaceKey","replaceValue","replace","indexOf","compileTemplate","BuyerProfile","onClick","openEditWindow","refreshDelay","onPersonTypeChange","refresh","personTypeId","getPersonTypeId","userId","getUserId","isEmptyValue","refreshInput","clearTimeout","_refreshDelay","ajax","url","refreshUrl","type","dataType","then","refreshEnd","response","status","enum","alert","bind","handleClick","handlePersonTypeChange","unbind","dir","getFormInput","editUrl","getEditUrl","openWindow","query","getEditQuery","inputValue","getInput","val","push","encodeURIComponent","join","timeout","refreshTimeout","setTimeout","values","input","existValueIds","firstFound","value","searchOption","ID","createOption","textContent","VALUE","optionIndex","length","parentElement","removeChild","selectOption","tokenId","i","String","profile","createElement","append","selected","parent","getForm","form","name","open","focus","personTypeElement","inputElement","optionElement"],"mappings":"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"}