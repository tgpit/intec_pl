this.BX=this.BX||{},this.BX.AvitoExport=this.BX.AvitoExport||{},this.BX.AvitoExport.Trading=this.BX.AvitoExport.Trading||{},function(t){"use strict";var e;const i=null!=(e=window.AvitoJQuery)?e:window.$;class s{constructor(t,e={}){this.$el=i(t),this.el=this.$el[0],this.options=Object.assign({},this.constructor.defaults,this.$el.data(),e)}destroy(){this.el=null}getElement(t,e,i){const s=this.getElementSelector(t);return this.getNode(s,e,i||"find")}getElementSelector(t){const e=t+"Element";return this.options[e]}getTemplate(t){const e=t+"Template",i=this.options[e],s=i.substring(0,1);let n;return n="."===s||"#"===s?this.getNode(i).html():i,n}getNode(t,e,s="find"){return"#"===t.substring(0,1)?e=i(document):e||(e=this.$el),e[s](t)}getLang(t,e){let i,s;return null!=this.options.lang&&t in this.options.lang?s=this.options.lang[t]:(i=this.options.langPrefix+t,s=BX.message(i)||""),s&&e&&(s=function(t,e){let i=t;for(const t in e){if(!e.hasOwnProperty(t))continue;const s="#"+t+"#",n=e[t];do{i=i.replace(s,n)}while(-1!==i.indexOf(s))}return i}(s,e)),s}}s.defaults={lang:{},langPrefix:null};class n extends s{constructor(t,e={}){super(null,e),this.view=t,this.view.boot(this)}activate(){throw new Error("not implemented")}}n.defaults={url:null,langPrefix:"AVITO_EXPORT_TRADING_ACTIVITY_"};const o=BX.namespace("AvitoExport.Ui");class r extends n{activate(){this.createForm().activate().then((()=>this.view.reload()))}createForm(){return new o.ModalForm(this.$el,{title:this.options.dialogTitle||this.options.title,saveTitle:this.getLang("ACTIVITY_SUBMIT"),url:this.options.url,width:this.options.width,height:this.options.height})}}r.defaults=Object.assign({},n.defaults,{title:null,dialogTitle:null,width:400,height:250});class a extends n{activate(){this.confirm()&&(this.view.showLoading(),this.sendCommand(this.options.url).then((t=>this.parseCommandResponse(t))).then((()=>{this.view.hideLoading(),this.view.reload()})).catch((t=>{this.view.hideLoading(),this.view.showError(t)})))}confirm(){const t=this.options.confirm;return null==t||confirm(t)}sendCommand(t){return new Promise((function(e,i){BX.ajax({url:t,method:"POST",data:{sessid:BX.bitrix_sessid()},dataType:"json",onsuccess:e,onfailure:i})}))}parseCommandResponse(t){if(null==t||"object"!=typeof t)throw new Error("ajax response missing");if(null==t.status)throw new Error("ajax response status missing");if("error"===t.status)throw new Error(t.message)}}a.defaults=Object.assign({},n.defaults,{confirm:null});class l extends s{boot(t){this.activity=t}bind(){}unbind(){}reload(){}showLoading(){}hideLoading(){}}var d;l.defaults={langPrefix:"AVITO_EXPORT_TRADING_ACTIVITY_"};const h=null!=(d=window.AvitoJQuery)?d:window.$;class c extends l{constructor(...t){super(...t),this.onClick=()=>{this.activity.activate()}}boot(t){super.boot(t),this.bind()}bind(){this.handleClick(!0)}unbind(){this.handleClick(!1)}handleClick(t){this.$el[t?"on":"off"]("click",this.onClick)}showLoading(){const t=this.tab();BX.showWait(t[0])}hideLoading(){const t=this.tab();BX.closeWait(t[0])}reload(){const t=this.tab();0!==t.length&&BX.onCustomEvent(t[0],"avitoExportActivityEnd")}showError(t){const e=t instanceof Error?t.message:t,i=BX.namespace("Sale.Admin"),s=BX.namespace("UI.Dialogs");null!=i.OrderEditPage?i.OrderEditPage.showDialog(e):null!=s.MessageBox?s.MessageBox.show({title:this.getLang("ACTIVITY_ERROR"),message:e,buttons:BX.UI.Dialogs.MessageBoxButtons.OK}):alert(e)}tab(){const t=this.getElementSelector("tab");return t?this.$el.closest(t):h()}}c.defaults=Object.assign({},l.defaults,{tabElement:null});class u extends c{reload(){this.editor().reload()}tab(){return $(this.editor()._container)}editor(){return this.options.editor}}u.defaults=Object.assign({},l.defaults,{editor:null});class g extends l{constructor(t={}){super(null,t)}showLoading(){this.grid().tableFade()}hideLoading(){this.grid().tableUnfade()}reload(){this.grid().reloadTable()}showError(t){const e=t instanceof Error?t.message:t,i=this.grid(),s=(e||"").split(/<br[ \/]*>/i);i.arParams.MESSAGES=s.map((t=>({TYPE:"ERROR",TEXT:t}))),BX.onCustomEvent(window,"BX.Main.grid:paramsUpdated",[])}grid(){return BX.Main.gridManager.getById(this.options.gridId).instance}}g.defaults=Object.assign({},l.defaults,{gridId:null});const m={Tab:c,CrmTab:u,Grid:g};t.Factory=class{static make(t,e,i={}){if("form"===t)return new r(e,i);if("command"===t)return new a(e,i);throw new Error(`unknown activity ${t}`)}},t.View=m}(this.BX.AvitoExport.Trading.Activity=this.BX.AvitoExport.Trading.Activity||{});
//# sourceMappingURL=script.js.map
