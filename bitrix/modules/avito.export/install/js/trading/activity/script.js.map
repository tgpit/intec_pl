{"version":3,"file":"script.js","sources":["../../plugin/skeleton.js","../../plugin/utils.js","src/skeleton.js","src/form.js","src/command.js","src/view/view.js","src/view/tab.js","src/view/crmtab.js","src/view/grid.js","src/index.js","src/factory.js"],"sourcesContent":["import {compileTemplate} from \"./utils\";\r\n\r\n// noinspection JSUnresolvedVariable\r\nconst $ = window.AvitoJQuery ?? window.$;\r\n\r\nexport class Skeleton {\r\n\r\n\tstatic defaults = {\r\n\t\tlang: {},\r\n\t\tlangPrefix: null\r\n\t};\r\n\r\n\tconstructor(element: HTMLElement, options: Object = {}) {\r\n\t\tthis.$el = $(element);\r\n\t\tthis.el = this.$el[0];\r\n\t\tthis.options = Object.assign({}, this.constructor.defaults, this.$el.data(), options);\r\n\t}\r\n\r\n\tdestroy() {\r\n\t\tthis.el = null;\r\n\t}\r\n\t\r\n\tgetElement(key, context, method) : JQuery {\r\n\t\tconst selector = this.getElementSelector(key);\r\n\t\r\n\t\treturn this.getNode(selector, context, method || 'find');\r\n\t}\r\n\t\r\n\tgetElementSelector(key: string) : string {\r\n\t\tconst optionKey = key + 'Element';\r\n\t\r\n\t\treturn this.options[optionKey];\r\n\t}\r\n\t\r\n\tgetTemplate(key: string) : string {\r\n\t\tconst optionKey = key + 'Template';\r\n\t\tconst option = this.options[optionKey];\r\n\t\tconst optionFirstSymbol = option.substring(0, 1);\r\n\t\tlet result;\r\n\t\r\n\t\tif (optionFirstSymbol === '.' || optionFirstSymbol === '#') {\r\n\t\t\tresult = this.getNode(option).html();\r\n\t\t} else {\r\n\t\t\tresult = option;\r\n\t\t}\r\n\t\r\n\t\treturn result;\r\n\t}\r\n\t\r\n\tgetNode(selector, context, method = 'find') : JQuery {\r\n\t\tif (selector.substring(0, 1) === '#') { // is id query\r\n\t\t\tcontext = $(document);\r\n\t\t} else if (!context) {\r\n\t\t\tcontext = this.$el;\r\n\t\t}\r\n\t\r\n\t\treturn context[method](selector);\r\n\t}\r\n\t\r\n\tgetLang(key, replaces) : string {\r\n\t\tlet langKey;\r\n\t\tlet result;\r\n\t\r\n\t\tif (this.options.lang != null && key in this.options.lang) {\r\n\t\t\tresult = this.options.lang[key];\r\n\t\t} else {\r\n\t\t\tlangKey = this.options.langPrefix + key;\r\n\t\t\tresult = BX.message(langKey) || '';\r\n\t\t}\r\n\t\r\n\t\tif (result && replaces) {\r\n\t\t\tresult = compileTemplate(result, replaces);\r\n\t\t}\r\n\t\r\n\t\treturn result;\r\n\t}\r\n}\r\n","// @flow\r\n\r\nexport function compileTemplate(template: string, replaces: Object) {\r\n\tlet result = template;\r\n\r\n\tfor (const key in replaces) {\r\n\t\tif (!replaces.hasOwnProperty(key)) { continue; }\r\n\r\n\t\tconst replaceKey = '#' + key + '#';\r\n\t\tconst replaceValue = replaces[key];\r\n\r\n\t\tdo {\r\n\t\t\tresult = result.replace(replaceKey, replaceValue);\r\n\t\t} while (result.indexOf(replaceKey) !== -1);\r\n\t}\r\n\r\n\treturn result;\r\n}\r\n\r\nexport function htmlToElement(html, tag = 'div') {\r\n\tconst renderer = document.createElement(tag);\r\n\r\n\trenderer.innerHTML = html;\r\n\r\n\treturn renderer.firstElementChild;\r\n}","// noinspection JSUnresolvedReference\r\n\r\nimport {Skeleton as PluginSkeleton} from \"../../../plugin/skeleton\";\r\nimport type {View} from \"./view/view\";\r\n\r\nexport class Skeleton extends PluginSkeleton {\r\n\r\n\tstatic defaults = {\r\n\t\turl: null,\r\n\t\tlangPrefix: 'AVITO_EXPORT_TRADING_ACTIVITY_',\r\n\t}\r\n\r\n\tconstructor(view: View, options: Object = {}) {\r\n\t\tsuper(null, options);\r\n\t\tthis.view = view;\r\n\t\tthis.view.boot(this);\r\n\t}\r\n\r\n\tactivate() : void {\r\n\t\tthrow new Error('not implemented');\r\n\t}\r\n}","import {Skeleton} from \"./skeleton\";\r\n\r\nconst Ui = BX.namespace('AvitoExport.Ui');\r\n\r\nexport class FormActivity extends Skeleton {\r\n\r\n\tstatic defaults = Object.assign({}, Skeleton.defaults, {\r\n\t\ttitle: null,\r\n\t\tdialogTitle: null,\r\n\t\twidth: 400,\r\n\t\theight: 250,\r\n\t})\r\n\r\n\tactivate() : void {\r\n\t\tconst form = this.createForm();\r\n\r\n\t\tform.activate()\r\n\t\t\t.then(() => this.view.reload());\r\n\t}\r\n\r\n\tcreateForm() {\r\n\t\treturn new Ui.ModalForm(this.$el, {\r\n\t\t\ttitle: this.options.dialogTitle || this.options.title,\r\n\t\t\tsaveTitle: this.getLang('ACTIVITY_SUBMIT'),\r\n\t\t\turl: this.options.url,\r\n\t\t\twidth: this.options.width,\r\n\t\t\theight: this.options.height,\r\n\t\t});\r\n\t}\r\n\r\n}","// noinspection JSUnresolvedReference\r\n\r\nimport {Skeleton} from \"./skeleton\";\r\n\r\nexport class CommandActivity extends Skeleton {\r\n\r\n\tstatic defaults = Object.assign({}, Skeleton.defaults, {\r\n\t\tconfirm: null,\r\n\t});\r\n\r\n\tactivate() : void {\r\n\t\tif (!this.confirm()) { return; }\r\n\r\n\t\tthis.view.showLoading();\r\n\r\n\t\tthis.sendCommand(this.options.url)\r\n\t\t\t.then((response) => this.parseCommandResponse(response))\r\n\t\t\t.then(() => {\r\n\t\t\t\tthis.view.hideLoading();\r\n\t\t\t\tthis.view.reload();\r\n\t\t\t})\r\n\t\t\t.catch((error) => {\r\n\t\t\t\tthis.view.hideLoading();\r\n\t\t\t\tthis.view.showError(error);\r\n\t\t\t});\r\n\t}\r\n\r\n\tconfirm() : boolean {\r\n\t\tconst message = this.options.confirm;\r\n\r\n\t\tif (message == null) { return true; }\r\n\r\n\t\treturn confirm(message);\r\n\t}\r\n\r\n\tsendCommand(url) : Promise {\r\n\t\treturn new Promise(function(resolve, reject) {\r\n\t\t\t// noinspection SpellCheckingInspection\r\n\t\t\tBX.ajax({\r\n\t\t\t\turl: url,\r\n\t\t\t\tmethod: 'POST',\r\n\t\t\t\tdata: {\r\n\t\t\t\t\tsessid: BX.bitrix_sessid(),\r\n\t\t\t\t},\r\n\t\t\t\tdataType: 'json',\r\n\t\t\t\tonsuccess: resolve,\r\n\t\t\t\tonfailure: reject,\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\tparseCommandResponse(response) : void {\r\n\t\tif (response == null || typeof response !== 'object') {\r\n\t\t\tthrow new Error('ajax response missing');\r\n\t\t}\r\n\r\n\t\tif (response.status == null) {\r\n\t\t\tthrow new Error('ajax response status missing');\r\n\t\t}\r\n\r\n\t\tif (response.status === 'error') {\r\n\t\t\tthrow new Error(response.message);\r\n\t\t}\r\n\t}\r\n\r\n}","import {Skeleton as PluginSkeleton} from \"../../../../plugin/skeleton\";\r\nimport type {Skeleton} from \"../skeleton\";\r\n\r\nexport class View extends PluginSkeleton {\r\n\r\n\tstatic defaults = {\r\n\t\tlangPrefix: 'AVITO_EXPORT_TRADING_ACTIVITY_',\r\n\t}\r\n\r\n\tactivity : Skeleton;\r\n\r\n\tboot(activity: Skeleton) : void {\r\n\t\tthis.activity = activity;\r\n\t}\r\n\r\n\tbind() : void {}\r\n\r\n\tunbind() : void {}\r\n\r\n\treload() : void {}\r\n\r\n\tshowLoading() : void {}\r\n\r\n\thideLoading() : void {}\r\n\r\n}\r\n","// noinspection JSUnresolvedReference\r\n\r\nimport {View} from \"./view\";\r\nimport type {Skeleton} from \"../skeleton\";\r\n\r\n// noinspection JSUnresolvedVariable\r\nconst $ = window.AvitoJQuery ?? window.$;\r\n\r\nexport class Tab extends View {\r\n\r\n\tstatic defaults = Object.assign({}, View.defaults, {\r\n\t\ttabElement: null,\r\n\t});\r\n\r\n\tboot(activity: Skeleton) : void {\r\n\t\tsuper.boot(activity);\r\n\t\tthis.bind();\r\n\t}\r\n\r\n\tbind() : void {\r\n\t\tthis.handleClick(true);\r\n\t}\r\n\r\n\tunbind() : void {\r\n\t\tthis.handleClick(false);\r\n\t}\r\n\r\n\thandleClick(dir: boolean) : void {\r\n\t\tthis.$el[dir ? 'on' : 'off']('click', this.onClick);\r\n\t}\r\n\r\n\tonClick = () : void => {\r\n\t\tthis.activity.activate();\r\n\t}\r\n\r\n\tshowLoading() : void {\r\n\t\tconst tab = this.tab();\r\n\r\n\t\tBX.showWait(tab[0]);\r\n\t}\r\n\r\n\thideLoading() : void {\r\n\t\tconst tab = this.tab();\r\n\r\n\t\tBX.closeWait(tab[0]);\r\n\t}\r\n\r\n\treload() : void {\r\n\t\tconst tab = this.tab();\r\n\r\n\t\tif (tab.length === 0) { return; }\r\n\r\n\t\tBX.onCustomEvent(tab[0], 'avitoExportActivityEnd');\r\n\t}\r\n\r\n\tshowError(error: Error|string) : void {\r\n\t\tconst message = error instanceof Error ? error.message : error;\r\n\t\tconst SaleAdmin = BX.namespace('Sale.Admin');\r\n\t\tconst Dialogs = BX.namespace('UI.Dialogs');\r\n\r\n\t\tif (SaleAdmin.OrderEditPage != null) {\r\n\t\t\tSaleAdmin.OrderEditPage.showDialog(message);\r\n\t\t} else if (Dialogs.MessageBox != null) {\r\n\t\t\tDialogs.MessageBox.show({\r\n\t\t\t\ttitle: this.getLang('ACTIVITY_ERROR'),\r\n\t\t\t\tmessage: message,\r\n\t\t\t\tbuttons: BX.UI.Dialogs.MessageBoxButtons.OK,\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\talert(message);\r\n\t\t}\r\n\t}\r\n\r\n\ttab() : $ {\r\n\t\tconst tabSelector = this.getElementSelector('tab');\r\n\r\n\t\treturn tabSelector ? this.$el.closest(tabSelector) : $();\r\n\t}\r\n}","import {Tab} from \"./tab\";\r\nimport {View} from \"./view\";\r\n\r\nexport class CrmTab extends Tab {\r\n\r\n\tstatic defaults = Object.assign({}, View.defaults, {\r\n\t\teditor: null,\r\n\t});\r\n\r\n\treload() : void {\r\n\t\tthis.editor().reload();\r\n\t}\r\n\r\n\ttab() : $ {\r\n\t\treturn $(this.editor()._container);\r\n\t}\r\n\r\n\teditor() : BX.UI.EntityEditor {\r\n\t\treturn this.options.editor;\r\n\t}\r\n\r\n}","// noinspection JSUnresolvedReference\r\n\r\nimport {View} from \"./view\";\r\n\r\nexport class Grid extends View {\r\n\r\n\tstatic defaults = Object.assign({}, View.defaults, {\r\n\t\tgridId: null,\r\n\t});\r\n\r\n\tconstructor(options: Object = {}) {\r\n\t\tsuper(null, options);\r\n\t}\r\n\r\n\tshowLoading() : void {\r\n\t\tthis.grid().tableFade();\r\n\t}\r\n\r\n\thideLoading() : void {\r\n\t\tthis.grid().tableUnfade();\r\n\t}\r\n\r\n\treload() : void {\r\n\t\tthis.grid().reloadTable();\r\n\t}\r\n\r\n\tshowError(error: Error|string) : void {\r\n\t\tconst message = error instanceof Error ? error.message : error;\r\n\t\tconst grid = this.grid();\r\n\t\tconst parts = (message || '').split(/<br[ \\/]*>/i);\r\n\r\n\t\tgrid.arParams.MESSAGES = parts.map((part) => {\r\n\t\t\treturn { TYPE: 'ERROR', TEXT: part };\r\n\t\t});\r\n\r\n\t\tBX.onCustomEvent(window, 'BX.Main.grid:paramsUpdated', []);\r\n\t}\r\n\r\n\tgrid() {\r\n\t\treturn BX.Main.gridManager.getById(this.options.gridId).instance;\r\n\t}\r\n\r\n}","import {Factory} from \"./factory\";\r\nimport {Tab} from \"./view/tab\";\r\nimport {CrmTab} from \"./view/crmtab\";\r\nimport {Grid} from \"./view/grid\";\r\n\r\nconst View = {\r\n\tTab,\r\n\tCrmTab,\r\n\tGrid,\r\n};\r\n\r\nexport {\r\n\tFactory,\r\n\tView\r\n}","import type {Skeleton} from \"./skeleton\";\r\nimport {FormActivity} from \"./form\";\r\nimport {CommandActivity} from \"./command\";\r\nimport type {View} from \"./view/view\";\r\n\r\nexport class Factory {\r\n\r\n\tstatic make(behavior: string, view: View, options: Object = {}) : Skeleton {\r\n\t\tif (behavior === 'form') {\r\n\t\t\treturn new FormActivity(view, options);\r\n\t\t} else if (behavior === 'command') {\r\n\t\t\treturn new CommandActivity(view, options);\r\n\t\t}\r\n\r\n\t\tthrow new Error(`unknown activity ${behavior}`);\r\n\t}\r\n\r\n}"],"names":["$","window","AvitoJQuery","Skeleton","constructor","element","options","$el","el","this","Object","assign","defaults","data","destroy","getElement","key","context","method","selector","getElementSelector","getNode","optionKey","getTemplate","option","optionFirstSymbol","substring","result","html","document","getLang","replaces","langKey","lang","langPrefix","BX","message","template","hasOwnProperty","replaceKey","replaceValue","replace","indexOf","compileTemplate","PluginSkeleton","view","boot","activate","Error","url","Ui","namespace","FormActivity","createForm","then","reload","ModalForm","title","dialogTitle","saveTitle","width","height","CommandActivity","confirm","showLoading","sendCommand","response","parseCommandResponse","hideLoading","catch","error","showError","Promise","resolve","reject","ajax","sessid","bitrix_sessid","dataType","onsuccess","onfailure","status","View","activity","bind","unbind","Tab","onClick","handleClick","dir","tab","showWait","closeWait","length","onCustomEvent","SaleAdmin","Dialogs","OrderEditPage","showDialog","MessageBox","show","buttons","UI","MessageBoxButtons","OK","alert","tabSelector","closest","tabElement","CrmTab","editor","_container","Grid","grid","tableFade","tableUnfade","reloadTable","parts","split","arParams","MESSAGES","map","part","TYPE","TEXT","Main","gridManager","getById","gridId","instance","behavior"],"mappings":"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"}