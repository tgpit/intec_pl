{"version":3,"file":"script.js","sources":["../../plugin/skeleton.js","../../plugin/utils.js","src/fetcher.js","src/index.js"],"sourcesContent":["import {compileTemplate} from \"./utils\";\r\n\r\n// noinspection JSUnresolvedVariable\r\nconst $ = window.AvitoJQuery ?? window.$;\r\n\r\nexport class Skeleton {\r\n\r\n\tstatic defaults = {\r\n\t\tlang: {},\r\n\t\tlangPrefix: null\r\n\t};\r\n\r\n\tconstructor(element: HTMLElement, options: Object = {}) {\r\n\t\tthis.$el = $(element);\r\n\t\tthis.el = this.$el[0];\r\n\t\tthis.options = Object.assign({}, this.constructor.defaults, this.$el.data(), options);\r\n\t}\r\n\r\n\tdestroy() {\r\n\t\tthis.el = null;\r\n\t}\r\n\t\r\n\tgetElement(key, context, method) : JQuery {\r\n\t\tconst selector = this.getElementSelector(key);\r\n\t\r\n\t\treturn this.getNode(selector, context, method || 'find');\r\n\t}\r\n\t\r\n\tgetElementSelector(key: string) : string {\r\n\t\tconst optionKey = key + 'Element';\r\n\t\r\n\t\treturn this.options[optionKey];\r\n\t}\r\n\t\r\n\tgetTemplate(key: string) : string {\r\n\t\tconst optionKey = key + 'Template';\r\n\t\tconst option = this.options[optionKey];\r\n\t\tconst optionFirstSymbol = option.substring(0, 1);\r\n\t\tlet result;\r\n\t\r\n\t\tif (optionFirstSymbol === '.' || optionFirstSymbol === '#') {\r\n\t\t\tresult = this.getNode(option).html();\r\n\t\t} else {\r\n\t\t\tresult = option;\r\n\t\t}\r\n\t\r\n\t\treturn result;\r\n\t}\r\n\t\r\n\tgetNode(selector, context, method = 'find') : JQuery {\r\n\t\tif (selector.substring(0, 1) === '#') { // is id query\r\n\t\t\tcontext = $(document);\r\n\t\t} else if (!context) {\r\n\t\t\tcontext = this.$el;\r\n\t\t}\r\n\t\r\n\t\treturn context[method](selector);\r\n\t}\r\n\t\r\n\tgetLang(key, replaces) : string {\r\n\t\tlet langKey;\r\n\t\tlet result;\r\n\t\r\n\t\tif (this.options.lang != null && key in this.options.lang) {\r\n\t\t\tresult = this.options.lang[key];\r\n\t\t} else {\r\n\t\t\tlangKey = this.options.langPrefix + key;\r\n\t\t\tresult = BX.message(langKey) || '';\r\n\t\t}\r\n\t\r\n\t\tif (result && replaces) {\r\n\t\t\tresult = compileTemplate(result, replaces);\r\n\t\t}\r\n\t\r\n\t\treturn result;\r\n\t}\r\n}\r\n","// @flow\r\n\r\nexport function compileTemplate(template: string, replaces: Object) {\r\n\tlet result = template;\r\n\r\n\tfor (const key in replaces) {\r\n\t\tif (!replaces.hasOwnProperty(key)) { continue; }\r\n\r\n\t\tconst replaceKey = '#' + key + '#';\r\n\t\tconst replaceValue = replaces[key];\r\n\r\n\t\tdo {\r\n\t\t\tresult = result.replace(replaceKey, replaceValue);\r\n\t\t} while (result.indexOf(replaceKey) !== -1);\r\n\t}\r\n\r\n\treturn result;\r\n}\r\n\r\nexport function htmlToElement(html, tag = 'div') {\r\n\tconst renderer = document.createElement(tag);\r\n\r\n\trenderer.innerHTML = html;\r\n\r\n\treturn renderer.firstElementChild;\r\n}","// noinspection JSUnresolvedVariable\r\nconst $ = window.AvitoJQuery ?? window.$;\r\n\r\nexport class Fetcher {\r\n\r\n\tconstructor() {\r\n\t\tthis.queries = {};\r\n\t\tthis.loaded = {};\r\n\t}\r\n\r\n\tload(url: string, personTypeId: number) : Promise {\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tconst cacheKey = `${url}-${personTypeId}`;\r\n\r\n\t\t\tif (this.loaded[cacheKey] != null) {\r\n\t\t\t\tresolve(this.loaded[cacheKey]);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif (this.queries[cacheKey] != null) {\r\n\t\t\t\tresolve(this.queries[cacheKey]);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tconst query = this.query(url, personTypeId);\r\n\r\n\t\t\tquery\r\n\t\t\t\t.then((data) => this.loaded[cacheKey] = data)\r\n\t\t\t\t.then(resolve, reject)\r\n\t\t\t\t.finally(() => { this.queries[cacheKey] = null; });\r\n\r\n\t\t\tthis.queries[cacheKey] = query;\r\n\r\n\t\t\treturn query;\r\n\t\t});\r\n\t}\r\n\r\n\tquery(url: string, personTypeId: number) : Promise {\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\t$.ajax({\r\n\t\t\t\turl: url,\r\n\t\t\t\ttype: 'POST',\r\n\t\t\t\tdata: { personTypeId: personTypeId },\r\n\t\t\t\tdataType: 'json',\r\n\t\t\t})\r\n\t\t\t\t.then(\r\n\t\t\t\t\tthis.queryEnd.bind(this, resolve, reject),\r\n\t\t\t\t\tthis.queryStop.bind(this, reject)\r\n\t\t\t\t);\r\n\t\t});\r\n\t}\r\n\r\n\tqueryEnd(resolve: () => {}, reject: () => {}, response: Object) : Array {\r\n\t\tif (!response || response.status !== 'ok') {\r\n\t\t\treject(response.message ?? 'unknown');\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tresolve(response.enum);\r\n\t}\r\n\r\n\tqueryStop(reject: () => {}) : void {\r\n\t\treject(new Error('failed'));\r\n\t}\r\n}","import {Skeleton} from \"../../../plugin/skeleton\";\r\nimport {Fetcher} from \"./fetcher\";\r\n\r\n// noinspection JSUnresolvedVariable\r\nconst $ = window.AvitoJQuery ?? window.$;\r\nconst fetcher = new Fetcher();\r\n\r\n// noinspection JSUnusedGlobalSymbols\r\nexport class OrderProperty extends Skeleton {\r\n\r\n\tstatic defaults = {\r\n\t\trefreshUrl: null,\r\n\t\trefreshTimeout: 100,\r\n\r\n\t\tpersonTypeId: null,\r\n\t\tpersonTypeElement: 'select[name=\"PERSON_TYPE\"]',\r\n\r\n\t\tinputElement: 'select',\r\n\t\toptionElement: 'option',\r\n\t}\r\n\r\n\tconstructor(element: HTMLElement, options: Object = {}) {\r\n\t\tsuper(element, options);\r\n\t\tthis.bind();\r\n\t}\r\n\r\n\tbind() : void {\r\n\t\tthis.handlePersonTypeChange(true);\r\n\t}\r\n\r\n\tunbind() : void {\r\n\t\tthis.handlePersonTypeChange(false);\r\n\t}\r\n\r\n\thandlePersonTypeChange(dir: boolean) : void {\r\n\t\tconst input = this.getFormInput('personType');\r\n\r\n\t\tinput[dir ? 'on' : 'off']('change', this.onPersonTypeChange);\r\n\t}\r\n\r\n\tonPersonTypeChange = () : void => {\r\n\t\tthis.refreshDelay();\r\n\t}\r\n\r\n\trefreshDelay() : void {\r\n\t\tthis._refreshDelay = setTimeout(this.refresh, this.options.refreshTimeout);\r\n\t}\r\n\r\n\trefresh = () : void => {\r\n\t\tconst personTypeId = this.getPersonTypeId();\r\n\r\n\t\tif (this.isEmptyValue(personTypeId)) {\r\n\t\t\tthis.draw([]);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tclearTimeout(this._refreshDelay);\r\n\r\n\t\tfetcher.load(this.options.refreshUrl, personTypeId)\r\n\t\t\t.then(this.draw);\r\n\t}\r\n\r\n\tdraw = (values: Array) : void => {\r\n\t\tconst previous = this.$el.val();\r\n\r\n\t\tthis.clear();\r\n\t\tthis.appendNew(values, previous);\r\n\t}\r\n\r\n\tclear() {\r\n\t\tthis.getElement('option')\r\n\t\t\t.filter((index: number, option: HTMLOptionElement) => !this.isEmptyValue(option.value))\r\n\t\t\t.remove();\r\n\t}\r\n\r\n\tappendNew(values: Array, selected: ?string) {\r\n\t\tfor (const value of values) {\r\n\t\t\tconst option = this.createOption(value);\r\n\r\n\t\t\tthis.$el.append(option);\r\n\r\n\t\t\tif (selected != null && String(selected) === String(option.value)) {\r\n\t\t\t\toption.selected = true;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tcreateOption(profile: Object) : HTMLOptionElement {\r\n\t\tconst option = document.createElement('option');\r\n\r\n\t\toption.value = profile.ID;\r\n\t\toption.textContent = profile.VALUE;\r\n\r\n\t\treturn option;\r\n\t}\r\n\r\n\tisEmptyValue(value) : boolean {\r\n\t\treturn value === null || value === '';\r\n\t}\r\n\r\n\tgetForm() : $ {\r\n\t\treturn $(this.el.form);\r\n\t}\r\n\r\n\tgetFormInput(name: string) : $ {\r\n\t\tconst form = this.getForm();\r\n\r\n\t\treturn this.getElement(name, form);\r\n\t}\r\n\r\n\tgetPersonTypeId() : ?string {\r\n\t\tconst input = this.getFormInput('personType');\r\n\t\tlet result;\r\n\r\n\t\tif (input.length > 0) {\r\n\t\t\tresult = input.val();\r\n\t\t} else {\r\n\t\t\tresult = this.options.personTypeId;\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t}\r\n}"],"names":["$","window","AvitoJQuery","Skeleton","constructor","element","options","$el","el","this","Object","assign","defaults","data","destroy","getElement","key","context","method","selector","getElementSelector","getNode","optionKey","getTemplate","option","optionFirstSymbol","substring","result","html","document","getLang","replaces","langKey","lang","langPrefix","BX","message","template","hasOwnProperty","replaceKey","replaceValue","replace","indexOf","compileTemplate","fetcher","queries","loaded","load","url","personTypeId","Promise","resolve","reject","cacheKey","query","then","finally","ajax","type","dataType","queryEnd","bind","queryStop","response","status","enum","Error","OrderProperty","onPersonTypeChange","refreshDelay","refresh","getPersonTypeId","isEmptyValue","draw","clearTimeout","_refreshDelay","refreshUrl","values","previous","val","clear","appendNew","handlePersonTypeChange","unbind","dir","getFormInput","setTimeout","refreshTimeout","filter","index","value","remove","selected","createOption","append","String","profile","createElement","ID","textContent","VALUE","getForm","form","name","input","length","personTypeElement","inputElement","optionElement"],"mappings":"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"}